# Subjects (i.e. approach B)

# INPUT: subject adjacency matrices (real data and synthetic data derived from
# configuration model cm, stochastic block model sbm, and hyperbolic model hm)
# OUTPUT: one vector of length nsubjetcs for each threshold and for each analysed topological measure

# Library
library(igraph)

# Change your paths to real_adj, cm, sbm and hm folders
path <- "real_adj/"
path_cm <- "cm/"
path_sbm <- "sbm/"
path_hm <- "hm/"

# Create an empty folder "output_distributions" to save outputs
path_dis <- "output_distributions/"

# Import the function GCE of the measure global communication efficiency from the following reference
# Bertagnolli, Giulia, Riccardo Gallotti, and Manlio De Domenico. "Quantifying efficient information exchange in real network flows." Communications Physics 4.1 (2021): 125.

# From 1 to nsubjects
subjects <- c(1:196)

# Size of the synthetic samples
rep <- 100

# Thresholds
threshold1 <- 1
threshold2 <- 6

for(per in threshold1:threshold2){
  er_gcl_v_real <- vector()
  er_apl_v_real <- vector()
  
  apl_v_real <- vector()
  apl_v_cm <- vector()
  apl_v_sbm <- vector()
  apl_v_hm <- vector()

  gce_v_real <- vector()
  gce_v_cm <- vector()
  gce_v_sbm <- vector()
  gce_v_hm <- vector()

  mod_v_real <- vector()
  mod_v_cm <- vector()
  mod_v_sbm <- vector()
  mod_v_hm <- vector()

  gcl_v_real <- vector()
  gcl_v_cm <- vector()
  gcl_v_sbm <- vector()
  gcl_v_hm <- vector()
  
  for(p in 1:length(subjects)){
    
    adj <- read.csv(paste0(path, "A_dti", per, "_p", p, ".csv"), header=T, sep=",")
    adj <- as.matrix(adj[,c(-1)])
    g <- graph.adjacency(adj, mode="undirected", weighted=TRUE)
    
    # REAL
    apl_v_real <- append(apl_v_real, mean_distance(g))
    gce_v_real <- append(gce_v_real, GCE(g)$normalised)
    mod_v_real <- append(mod_v_real, modularity(cluster_louvain(g)))
    gcl_v_real <- append(gcl_v_real, transitivity(g))

    er_gcl_somma_real <- 0 # small-worldness index measure
    er_apl_somma_real <- 0

    apl_somma_cm <- 0 # average path length
    apl_somma_sbm <- 0
    apl_somma_hm <- 0

    gce_somma_cm <- 0 # global communication efficiency
    gce_somma_sbm <- 0
    gce_somma_hm <- 0

    mod_somma_cm <- 0 # modularity
    mod_somma_sbm <- 0
    mod_somma_hm <- 0

    gcl_somma_cm <- 0 # global clustering
    gcl_somma_sbm <- 0
    gcl_somma_hm <- 0

    for(v in 1:rep){
      
      adj_cm <- read.csv(paste0(path_cm, "A_dti", per, "_p", p, "cm_", v, ".csv"), header=T, sep=",")
      adj_cm <- as.matrix(adj_cm[,c(-1)])
      g_cm <- graph.adjacency(adj_cm, mode="undirected", weighted=TRUE)
    
      adj_sbm <- read.csv(paste0(path_sbm, "A_dti", per, "p_", p, "sbm_", v, ".csv"), header=T, sep=",")
      adj_sbm <- as.matrix(adj_sbm[,c(-1)])
      g_sbm <- graph.adjacency(adj_sbm, mode="undirected", weighted=TRUE)
      
      adj_hm <- read.csv(paste0(path_hm, "A_dti", per, "_p", p, "hm_", v, ".csv"), header=T, sep=",")
      adj_hm <- as.matrix(adj_hm[,c(-1)])
      g_hm <- graph.adjacency(adj_hm, mode="undirected", weighted=TRUE)

      # real
      g_er_real <- erdos.renyi.game(length(V(g)), length(E(g)), type="gnm") # for small-worldness index measure
      er_gcl_somma_real <- er_gcl_somma_real + transitivity(g_er_real)
      er_apl_somma_real <- er_apl_somma_real + mean_distance(g_er_real)

      # CM
      apl_somma_cm <- apl_somma_cm + mean_distance(g_cm)
      gce_somma_cm <- gce_somma_cm + GCE(g_cm, directed=FALSE, normalised=FALSE, weights=NULL)
      mod_somma_cm <- mod_somma_cm + modularity(cluster_louvain(g_cm))
      gcl_somma_cm <- gcl_somma_cm + transitivity(g_cm)

      # SBM
      apl_somma_sbm <- apl_somma_sbm + mean_distance(g_sbm)
      gce_somma_sbm <- gce_somma_sbm + GCE(g_sbm, directed=FALSE, normalised=FALSE, weights=NULL)
      mod_somma_sbm <- mod_somma_sbm + modularity(cluster_louvain(g_sbm))
      gcl_somma_sbm <- gcl_somma_sbm + transitivity(g_sbm)

      # HM
      apl_somma_hm <- apl_somma_hm + mean_distance(g_hm)
      gce_somma_hm <- gce_somma_hm + GCE(g_hm, directed=FALSE, normalised=FALSE, weights=NULL)
      mod_somma_hm <- mod_somma_hm + modularity(cluster_louvain(g_hm))
      gcl_somma_hm <- gcl_somma_hm + transitivity(g_hm)

    }
    
    er_gcl_v_real <- append(er_gcl_v_real, er_gcl_somma_real/rep)
    er_apl_v_real <- append(er_apl_v_real, er_apl_somma_real/rep)

    # Vectors with length nsubjects, each value is the average between 100 replications
    apl_v_cm <- append(apl_v_cm, apl_somma_cm/rep)
    apl_v_sbm <- append(apl_v_sbm, apl_somma_sbm/rep)
    apl_v_hm <- append(apl_v_hm, apl_somma_hm/rep)

    gce_v_cm <- append(gce_v_cm, gce_somma_cm/rep)
    gce_v_sbm <- append(gce_v_sbm, gce_somma_sbm/rep)
    gce_v_hm <- append(gce_v_hm, gce_somma_hm/rep)

    mod_v_cm <- append(mod_v_cm, mod_somma_cm/rep)
    mod_v_sbm <- append(mod_v_sbm, mod_somma_sbm/rep)
    mod_v_hm <- append(mod_v_hm, mod_somma_hm/rep)

    gcl_v_cm <- append(gcl_v_cm, gcl_somma_cm/rep)
    gcl_v_sbm <- append(gcl_v_sbm, gcl_somma_sbm/rep)
    gcl_v_hm <- append(gcl_v_hm, gcl_somma_hm/rep)

  }
    
  # Saving distributions for bar plot viz (and p-values)

  write.csv(apl_v_real, file = paste0(path_dis,"apl_real_thr", per,".csv"))
  write.csv(apl_v_cm, file = paste0(path_dis,"apl_cm_thr", per,".csv"))
  write.csv(apl_v_sbm, file = paste0(path_dis,"apl_sbm_thr", per,".csv"))
  write.csv(apl_v_hm, file = paste0(path_dis,"apl_hm_thr", per,".csv"))

  write.csv(gce_v_real, file = paste0(path_dis,"gce_real_thr", per,".csv"))
  write.csv(gce_v_cm, file = paste0(path_dis,"gce_cm_thr", per,".csv"))
  write.csv(gce_v_sbm, file = paste0(path_dis,"gce_sbm_thr", per,".csv"))
  write.csv(gce_v_hm, file = paste0(path_dis,"gce_hm_thr", per,".csv"))

  write.csv(mod_v_real, file = paste0(path_dis,"mod_real_thr", per,".csv"))
  write.csv(mod_v_cm, file = paste0(path_dis,"mod_cm_thr", per,".csv"))
  write.csv(mod_v_sbm, file = paste0(path_dis,"mod_sbm_thr", per,".csv"))
  write.csv(mod_v_hm, file = paste0(path_dis,"mod_hm_thr", per,".csv"))

  write.csv(gcl_v_real, file = paste0(path_dis,"gcl_real_thr", per ,".csv"))
  write.csv(gcl_v_cm, file = paste0(path_dis,"gcl_cm_thr", per,".csv"))
  write.csv(gcl_v_sbm, file = paste0(path_dis,"gcl_sbm_thr", per,".csv"))
  write.csv(gcl_v_hm, file = paste0(path_dis,"gcl_hm_thr", per,".csv"))
  
  write.csv(er_gcl_v_real, file = paste0(path_dis,"er_gcl_real_thr", per ,".csv"))
  write.csv(er_apl_v_real, file = paste0(path_dis,"er_apl_real_thr", per,".csv"))

  # As in the code "structural_results_GroupMean.txt", the small-worldness index measure is calculated, for the visualization, from the averaged shortest path length and the global clustering measures
}
